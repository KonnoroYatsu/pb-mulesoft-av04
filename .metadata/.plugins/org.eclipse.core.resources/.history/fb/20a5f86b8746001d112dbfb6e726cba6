package com.example.avalicao04.util;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpStatus;
import org.springframework.util.StringUtils;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.example.avalicao04.exception.InvalidValueException;

@RestControllerAdvice
public class ValidacaoHandler {

    @Autowired
    private MessageSource messageSource;
    
    @ResponseStatus(code = HttpStatus.BAD_REQUEST)
    @ExceptionHandler(MethodArgumentNotValidException.class)
    public List<String> handler(MethodArgumentNotValidException exception){
        List<String> erros = new ArrayList<String>();
        List<FieldError> fieldErrors = exception.getBindingResult().getFieldErrors();
        for(int i = 0; i < fieldErrors.size(); i++) {
            String str = messageSource.getMessage(fieldErrors.get(i), LocaleContextHolder.getLocale());
            erros.add(StringUtils.capitalize(str));
        }
        return erros;
    }
    
    @ResponseStatus(code = HttpStatus.BAD_REQUEST)
    @ExceptionHandler(InvalidValueException.class)
    public List<String> handler(InvalidValueException exception) {
        List<String> erro = new ArrayList<String>();
        erro.add(exception.getMessage());
        return erro;
    }
}
