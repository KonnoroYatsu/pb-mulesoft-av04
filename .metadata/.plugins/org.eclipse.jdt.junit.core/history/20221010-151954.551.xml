<?xml version="1.0" encoding="UTF-8"?><testrun name="MappersUtilTest" project="avalicao-04" tests="5" started="5" failures="0" errors="0" ignored="0">
  <testsuite name="com.example.avalicao04.util.MappersUtilTest" time="0.029" displayname="MappersUtilTest" uniqueid="[engine:junit-jupiter]/[class:com.example.avalicao04.util.MappersUtilTest]">
    <testcase name="deveriaConverterCardFormParaCardDto" classname="com.example.avalicao04.util.MappersUtilTest" time="0.019" displayname="deveriaConverterCardFormParaCardDto()" uniqueid="[engine:junit-jupiter]/[class:com.example.avalicao04.util.MappersUtilTest]/[method:deveriaConverterCardFormParaCardDto()]"/>
    <testcase name="deveriaRetornarUmaBrandQuandoReceberUmaString" classname="com.example.avalicao04.util.MappersUtilTest" time="0.001" displayname="deveriaRetornarUmaBrandQuandoReceberUmaString()" uniqueid="[engine:junit-jupiter]/[class:com.example.avalicao04.util.MappersUtilTest]/[method:deveriaRetornarUmaBrandQuandoReceberUmaString()]"/>
    <testcase name="deveriaConverterPaymentResponseFormParaPaymentEntity" classname="com.example.avalicao04.util.MappersUtilTest" time="0.003" displayname="deveriaConverterPaymentResponseFormParaPaymentEntity()" uniqueid="[engine:junit-jupiter]/[class:com.example.avalicao04.util.MappersUtilTest]/[method:deveriaConverterPaymentResponseFormParaPaymentEntity()]"/>
    <testcase name="deveriaConverterPaymentEntityParaPaymentDto" classname="com.example.avalicao04.util.MappersUtilTest" time="0.001" displayname="deveriaConverterPaymentEntityParaPaymentDto()" uniqueid="[engine:junit-jupiter]/[class:com.example.avalicao04.util.MappersUtilTest]/[method:deveriaConverterPaymentEntityParaPaymentDto()]"/>
    <testcase name="deveriaRetornarUmInvalidValueExceptionQuandoReceberUmaStringDeBrandInvalida" classname="com.example.avalicao04.util.MappersUtilTest" time="0.001" displayname="deveriaRetornarUmInvalidValueExceptionQuandoReceberUmaStringDeBrandInvalida()" uniqueid="[engine:junit-jupiter]/[class:com.example.avalicao04.util.MappersUtilTest]/[method:deveriaRetornarUmInvalidValueExceptionQuandoReceberUmaStringDeBrandInvalida()]"/>
  </testsuite>
</testrun>
